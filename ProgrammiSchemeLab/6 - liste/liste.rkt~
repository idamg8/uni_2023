;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-intermediate-lambda-reader.ss" "lang")((modname liste) (read-case-sensitive #t) (teachpacks ((lib "drawings.ss" "installed-teachpacks") (lib "hanoi.ss" "installed-teachpacks"))) (htdp-settings #(#t constructor repeating-decimal #f #t none #f ((lib "drawings.ss" "installed-teachpacks") (lib "hanoi.ss" "installed-teachpacks")) #f)))
(define belong?      ; val: true/false
  (lambda (l n)      ; l: lista, n: intero
    (cond ((null? l)
           false)
          ((= (car l) n)
            true)
          (else
           (belong? (cdr l) n))
        )
      ))


(define position          ; val: intero
  (lambda (l n)           ; l: lista, n: intero (facente parte della lista)
    (if (> (length l) 0)
        (if (= n (car l))
            0
            (+ 1 (position (cdr l) n))
            )
        0
        )
    ))

(define position-compact
       (lambda (l n)
         (if (= n (car l))
             0
             (+ 1 (position (cdr l) n))
             )
         ))

(define sorted-ins       ; val: lista
  (lambda (l n)          ; l: lista, n: intero (non facente parte della lista)
    (if (belong? l n)
        l
        (if (= (length l) 0)
            (cons n null)
            (if (> n (car l))
                (cons (car l) (sorted-ins (cdr l) n))
                (cons n l)))
        )
    ))

(define sorted-list      ; val: lista di interi ordinati
  (lambda (l)            ; l: lista di interi
    (if (= (length l) 0)
        '()
        (sorted-ins (sorted-list (cdr l)) (car l))
        )
    ))

;(define doppi
;  (lambda (l)
;    (if (= (length l) 1)
;        l
;        (if (= (car l) (car (cdr l)))
;            (doppi (cdr l))
;            (cons (car l) (doppi (cdr l)))
;            )
;        )
;    ))