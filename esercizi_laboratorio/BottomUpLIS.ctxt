#BlueJ class context
comment0.target=BottomUpLIS
comment1.params=s
comment1.target=int\ llisDP(int[])
comment1.text=\n\ \ \ \ La\ struttura\ di\ supporto\ appropriata\ per\ applicare\ la\ tecnica\ di\ memoization\ seguendo\ l\u2019impostazione\ proposta\ al\ punto\n\ \ \ \ 2\ dell\u2019esercitazione\ precedente\ \u00E8\ una\ matrice\ quadrata\ (n+1)\ x\ (n+1).\n\ \ \ \ Una\ matrice\ di\ questo\ tipo\ per\ la\ sequenza\ s\ \=\ <\ 2,\ 7,\ 5,\ 7,\ 4\ >\ \u00E8\ illustrata\ nella\ figura\ della\ pagina\ seguente\ (n\=5)\n\ \ \ \ attraverso\ una\ griglia\ (tratti\ orizzontali\ e\ verticali\ blu)\ i\ cui\ nodi\ corrispondono\ agli\ elementi\ della\ matrice.\n\ \ \ \ Ciascuna\ colonna\ \u00E8\ associata\ a\ una\ \u201Ccoda\u201D\ della\ sequenza\ s\ a\ partire\ dall\u2019indice\ i,\ e\ tale\ porzione\ della\ sequenza\ si\n\ \ \ \ legge\ in\ alto,\ guardando\ gli\ elementi\ in\ neretto\ a\ destra\ della\ colonna\ di\ indice\ i.\ In\ particolare,\ l\u2019indice\ 0\ corrisponde\n\ \ \ \ all\u2019intera\ sequenza\ s\ (tutti\ gli\ elementi\ sono\ a\ destra),\ mentre\ n\ corrisponde\ a\ una\ coda\ di\ s\ vuota\ (non\ ci\ sono\ elementi\n\ \ \ \ a\ destra\ della\ colonna\ n).\n\ \ \ \ Ciascuna\ riga\ \u00E8\ invece\ associata\ a\ un\ valore\ del\ parametro\ t,\ in\ accordo\ con\ l\u2019interpretazione\ t\ \=\ s[j]\ se\ 0\ \u2264\ j\ <\ n\n\ \ \ \ oppure\ t\ \=\ 0\ se\ j\ \=\ n,\ dove\ j\ \u00E8\ l\u2019indice\ di\ riga\ della\ matrice.\ Il\ valore\ di\ t,\ in\ verde\ nella\ figura,\ si\ legge\ a\ sinistra\ in\n\ \ \ \ corrispondenza\ alla\ riga\ j.\n\ \ \ \ Gli\ indici\ di\ colonna\ (i)\ e\ di\ riga\ (j)\ sono\ riportati\ in\ grigio,\ rispettivamente\ sotto\ la\ griglia\ e\ a\ destra\ della\ griglia.\n\ \ \ \ Questa\ stessa\ struttura\ pu\u00F2\ essere\ utilizzata\ per\ applicare\ una\ tecnica\ di\ programmazione\ dinamica\ bottom-up,\ basata\ su\n\ \ \ \ costrutti\ iterativi\ anzich\u00E9\ sulla\ ricorsione,\ in\ cui\ il\ programmatore\ controlla\ esplicitamente\ ogni\ passo\ del\ processo\ di\n\ \ \ \ calcolo,\ in\ particolare\ l\u2019ordine\ delle\ operazioni\ da\ effettuare\ per\ determinare\ i\ valori\ da\ assegnare\ ai\ nodi\ della\ griglia,\n\ \ \ \ cio\u00E8\ agli\ elementi\ della\ matrice.\ Si\ pu\u00F2\ anche\ osservare\ che\ i\ valori\ dei\ nodi\ compresi\ nell\u2019area\ a\ fondo\ grigio\ non\ sono\n\ \ \ \ rilevanti\ al\ fine\ di\ calcolare\ la\ lunghezza\ della\ sottosequenza\ crescente\ pi\u00F9\ lunga\ di\ s\ in\ quanto,\ considerando\ i\ possibili\n\ \ \ \ argomenti\ delle\ invocazioni\ di\ llisRec,\ t\ \u2260\ 0\ \u00E8\ sempre\ il\ valore\ di\ un\ elemento\ di\ s\ la\ cui\ posizione\ in\ s\ precede\n\ \ \ \ strettamente\ i\ e\ pertanto\ non\ pu\u00F2\ mai\ essere\ associato\ a\ un\ indice\ j\ \u2265\ i.\ (Ci\u00F2\ significa\ che\ ci\ si\ pu\u00F2\ occupare\ o\ meno\ di\n\ \ \ \ quei\ nodi,\ a\ seconda\ di\ cosa\ sembra\ pi\u00F9\ semplice;\ presta\ per\u00F2\ attenzione\ al\ fatto\ che,\ pur\ essendo\ n\ \u2265\ i,\ n\ non\ \u00E8\ indice\n\ \ \ \ di\ un\ elemento\ della\ sequenza,\ ma\ corrisponde\ a\ t\ \=\ 0,\ e\ quindi\ i\ nodi\ della\ riga\ pi\u00F9\ in\ basso\ sono\ tutti\ significativi.)\n\ \ \ \ Le\ schede\ llis_bottom_up.pdf,\ consultabili\ in\ forma\ di\ presentazione,\ illustrano\ il\ processo\ di\ elaborazione\ per\n\ \ \ \ assegnare\ valori\ agli\ elementi\ della\ matrice\ nell\u2019esempio\ considerato.\ Gli\ archi\ rossi\ orientati\ che\ hanno\ origine\ in\ un\nnodo\ riflettono\ le\ ricorsioni\ di\ llisRec\ (una\ o\ due)\ per\ i\ valori\ dei\ parametri\ corrispondenti\ ai\ nodi\ coinvolti.
comment2.params=s
comment2.target=int[]\ lisDP(int[])
comment2.text=\n\ \ \ \ Analogamente\ a\ quanto\ visto\ a\ lezione\ per\ il\ problema\ della\ sottosequenza\ comune\ pi\u00F9\ lunga\ (LCS),\ a\ partire\ dalla\n\ \ \ \ matrice\ risultante\ alla\ fine\ dell\u2019elaborazione\ oggetto\ del\ punto\ precedente\ \u00E8\ possibile\ ricostruire\ una\ sottosequenza\n\ \ \ \ crescente\ pi\u00F9\ lunga\ (LIS).\ A\ tale\ proposito\ \u00E8\ sufficiente\ identificare\ un\ opportuno\ cammino\ attraverso\ la\ matrice\ che\n\ \ \ \ percorre\ i\ nodi\ corrispondenti\ alle\ ricorsioni\ di\ llisRec\ che\ hanno\ contribuito\ al\ risultato\ finale.\n\ \ \ \ Le\ schede\ lis_percorso.pdf,\ consultabili\ in\ forma\ di\ presentazione,\ illustrano\ il\ processo\ di\ elaborazione\ per\n\ \ \ \ identificare\ un\ percorso\ utile\ nell\u2019esempio\ considerato\ sopra.\ Gli\ archi\ verdi\ riflettono\ le\ ricorsioni\ di\ llisRec\ che\n\ \ \ \ hanno\ fornito\ i\ valori\ utilizzati\ per\ calcolare\ il\ risultato\:\ in\ base\ alla\ codifica\ adottata\ per\ egli\ argomenti\ di\ llisRec,\n\ \ \ \ archi\ orizzontali\ corrispondono\ a\ elementi\ di\ s\ non\ selezionati;\ archi\ inclinati\ corrispondono\ a\ elementi\ presi\ a\ far\ parte\n\ \ \ \ della\ sottosequenza\ (evidenziati\ in\ questo\ caso\ dal\ fondo\ verde\ chiaro).\n\ \ \ \ Completa\ il\ programma\ preimpostato\ nel\ file\ BottomUpLIS.java,\ senza\ modificare\ le\ parti\ gi\u00E0\ codificate,\ per\n\ \ \ \ realizzare\ la\ procedura\ lisDP\ (metodo\ statico)\ applicando\ una\ tecnica\ di\ programmazione\ dinamica\ bottom-up\n\ \ \ \ completata\ da\ un\ cammino\ attraverso\ la\ matrice\ in\ accordo\ con\ le\ indicazioni\ fornite.\ Verifica\ quindi\ che\ i\ risultati\nottenuti\ siano\ coerenti\ con\ quanto\ ci\ si\ dovrebbe\ attendere.
numComments=3
